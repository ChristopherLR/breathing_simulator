/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_FLOW_DEFINITION_PB_H_INCLUDED
#define PB_FLOW_DEFINITION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _InterfaceMessage_MessageType { 
    InterfaceMessage_MessageType_kConstantFlow = 0, 
    InterfaceMessage_MessageType_kManualFlow = 1, 
    InterfaceMessage_MessageType_kDynamicFlow = 2 
} InterfaceMessage_MessageType;

typedef enum _ManualFlow_FanDirection { 
    ManualFlow_FanDirection_kClockwise = 0, 
    ManualFlow_FanDirection_kCounterClockwise = 1 
} ManualFlow_FanDirection;

/* Struct definitions */
typedef struct _ConstantFlow { 
    float flow; 
    int32_t duration; 
} ConstantFlow;

typedef struct _DynamicFlow { 
    int32_t duration; 
    int32_t count; 
    int32_t interval; 
} DynamicFlow;

typedef struct _ManualFlow { 
    float flow; 
    int32_t driver; 
    ManualFlow_FanDirection fan_direction; 
} ManualFlow;

typedef struct _InterfaceMessage { 
    InterfaceMessage_MessageType message_type; 
    pb_size_t which_message;
    union {
        ConstantFlow constant_flow;
        DynamicFlow dynamic_flow;
        ManualFlow manual_flow;
    } message; 
} InterfaceMessage;


/* Helper constants for enums */
#define _InterfaceMessage_MessageType_MIN InterfaceMessage_MessageType_kConstantFlow
#define _InterfaceMessage_MessageType_MAX InterfaceMessage_MessageType_kDynamicFlow
#define _InterfaceMessage_MessageType_ARRAYSIZE ((InterfaceMessage_MessageType)(InterfaceMessage_MessageType_kDynamicFlow+1))

#define _ManualFlow_FanDirection_MIN ManualFlow_FanDirection_kClockwise
#define _ManualFlow_FanDirection_MAX ManualFlow_FanDirection_kCounterClockwise
#define _ManualFlow_FanDirection_ARRAYSIZE ((ManualFlow_FanDirection)(ManualFlow_FanDirection_kCounterClockwise+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define InterfaceMessage_init_default            {_InterfaceMessage_MessageType_MIN, 0, {ConstantFlow_init_default}}
#define ConstantFlow_init_default                {0, 0}
#define ManualFlow_init_default                  {0, 0, _ManualFlow_FanDirection_MIN}
#define DynamicFlow_init_default                 {0, 0, 0}
#define InterfaceMessage_init_zero               {_InterfaceMessage_MessageType_MIN, 0, {ConstantFlow_init_zero}}
#define ConstantFlow_init_zero                   {0, 0}
#define ManualFlow_init_zero                     {0, 0, _ManualFlow_FanDirection_MIN}
#define DynamicFlow_init_zero                    {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ConstantFlow_flow_tag                    1
#define ConstantFlow_duration_tag                2
#define DynamicFlow_duration_tag                 1
#define DynamicFlow_count_tag                    2
#define DynamicFlow_interval_tag                 3
#define ManualFlow_flow_tag                      1
#define ManualFlow_driver_tag                    2
#define ManualFlow_fan_direction_tag             3
#define InterfaceMessage_message_type_tag        1
#define InterfaceMessage_constant_flow_tag       2
#define InterfaceMessage_dynamic_flow_tag        3
#define InterfaceMessage_manual_flow_tag         4

/* Struct field encoding specification for nanopb */
#define InterfaceMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,constant_flow,message.constant_flow),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,dynamic_flow,message.dynamic_flow),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,manual_flow,message.manual_flow),   4)
#define InterfaceMessage_CALLBACK NULL
#define InterfaceMessage_DEFAULT NULL
#define InterfaceMessage_message_constant_flow_MSGTYPE ConstantFlow
#define InterfaceMessage_message_dynamic_flow_MSGTYPE DynamicFlow
#define InterfaceMessage_message_manual_flow_MSGTYPE ManualFlow

#define ConstantFlow_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    flow,              1) \
X(a, STATIC,   SINGULAR, INT32,    duration,          2)
#define ConstantFlow_CALLBACK NULL
#define ConstantFlow_DEFAULT NULL

#define ManualFlow_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    flow,              1) \
X(a, STATIC,   SINGULAR, INT32,    driver,            2) \
X(a, STATIC,   SINGULAR, UENUM,    fan_direction,     3)
#define ManualFlow_CALLBACK NULL
#define ManualFlow_DEFAULT NULL

#define DynamicFlow_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    duration,          1) \
X(a, STATIC,   SINGULAR, INT32,    count,             2) \
X(a, STATIC,   SINGULAR, INT32,    interval,          3)
#define DynamicFlow_CALLBACK NULL
#define DynamicFlow_DEFAULT NULL

extern const pb_msgdesc_t InterfaceMessage_msg;
extern const pb_msgdesc_t ConstantFlow_msg;
extern const pb_msgdesc_t ManualFlow_msg;
extern const pb_msgdesc_t DynamicFlow_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define InterfaceMessage_fields &InterfaceMessage_msg
#define ConstantFlow_fields &ConstantFlow_msg
#define ManualFlow_fields &ManualFlow_msg
#define DynamicFlow_fields &DynamicFlow_msg

/* Maximum encoded size of messages (where known) */
#define ConstantFlow_size                        16
#define DynamicFlow_size                         33
#define InterfaceMessage_size                    37
#define ManualFlow_size                          18

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
